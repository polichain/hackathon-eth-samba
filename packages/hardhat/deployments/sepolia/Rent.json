{
  "address": "0x4bCdC42c7E14FC131b77F23d39Cc2fe0c92EA8ce",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "ContractAborted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "ContractCompleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "payer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "InsurancePaid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "payer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "RentPaid",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "abortContract",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_renter",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_insuranceAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_rentAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_definedTime",
          "type": "uint256"
        }
      ],
      "name": "createNewContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getContractState",
      "outputs": [
        {
          "internalType": "enum Rent.ContractState",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getContracts",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_renter",
          "type": "address"
        }
      ],
      "name": "getInsuranceAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "payInsurance",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "payRent",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "rentContracts",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "renter",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "locator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "insuranceAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rentAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "definedTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timeRemaining",
          "type": "uint256"
        },
        {
          "internalType": "enum Rent.ContractState",
          "name": "state",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "state",
      "outputs": [
        {
          "internalType": "enum Rent.ContractState",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xe3c5d22cae0430b9398b020d59b0442e23531d0a95b01f890276d1bff6ae589f",
  "receipt": {
    "to": null,
    "from": "0xd180803C7Ed9C909DD04f89e3A6E66D80018CE4a",
    "contractAddress": "0x4bCdC42c7E14FC131b77F23d39Cc2fe0c92EA8ce",
    "transactionIndex": 22,
    "gasUsed": "1134509",
    "logsBloom": "0x
    "blockHash": "0x0b53327c36bd3cbf7c041ff580829806825a3f1f6dc68f5bf2b536e1348628bc",
    "transactionHash": "0xe3c5d22cae0430b9398b020d59b0442e23531d0a95b01f890276d1bff6ae589f",
    "logs": [],
    "blockNumber": 5550028,
    "cumulativeGasUsed": "2576744",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "603cf0fdb3bc05f3862c797a78a28164",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ContractAborted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"ContractCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"InsurancePaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RentPaid\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"abortContract\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_renter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_insuranceAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_definedTime\",\"type\":\"uint256\"}],\"name\":\"createNewContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getContractState\",\"outputs\":[{\"internalType\":\"enum Rent.ContractState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getContracts\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_renter\",\"type\":\"address\"}],\"name\":\"getInsuranceAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"payInsurance\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"payRent\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rentContracts\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"renter\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"locator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"insuranceAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"definedTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeRemaining\",\"type\":\"uint256\"},{\"internalType\":\"enum Rent.ContractState\",\"name\":\"state\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum Rent.ContractState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Rent.sol\":\"Rent\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Rent.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0 <0.9.0;\\n\\ncontract Rent {\\n\\tbool private locked;\\n\\n\\tstruct Contract {\\n\\t\\taddress payable renter;\\n\\t\\taddress payable locator;\\n\\t\\tuint insuranceAmount;\\n\\t\\tuint rentAmount;\\n\\t\\tuint definedTime;\\n\\t\\tuint timeRemaining;\\n\\t\\tContractState state;\\n\\t}\\n\\n\\tmapping(address => Contract) public rentContracts;\\n\\n\\tenum ContractState {\\n\\t\\tUninitialized,\\n\\t\\tStandBy,\\n\\t\\tActive,\\n\\t\\tAborted,\\n\\t\\tCompleted\\n\\t}\\n\\tContractState public state;\\n\\n\\tevent RentPaid(address indexed payer, uint amount);\\n\\tevent InsurancePaid(\\n\\t\\taddress indexed payer,\\n\\t\\tuint amount,\\n\\t\\taddress indexed receiver\\n\\t);\\n\\tevent ContractAborted(address indexed sender);\\n\\tevent ContractCompleted();\\n\\n\\t//modifier onlyRenter() {\\n\\t//require(msg.sender == renter, \\\"Only the renter can perform this action\\\");\\n\\t//_;\\n\\t//}\\n\\n\\t// modifier onlyActiveContract() {\\n\\t// require(state == ContractState.Active, \\\"Contract is not active\\\");\\n\\t//_;\\n\\t// }\\n\\n\\tmodifier noReentrancy() {\\n\\t\\trequire(!locked, \\\"No reentrancy\\\");\\n\\t\\tlocked = true;\\n\\n\\t\\t_;\\n\\t\\tlocked = false;\\n\\t}\\n\\n\\tfunction createNewContract(\\n\\t\\taddress payable _renter,\\n\\t\\tuint _insuranceAmount,\\n\\t\\tuint _rentAmount,\\n\\t\\tuint _definedTime\\n\\t) external {\\n\\t\\t// Ideally, include access control here (e.g., only the admin or locator can create a new contract)\\n\\n\\t\\tContract storage newContract = rentContracts[_renter];\\n\\t\\tnewContract.renter = _renter;\\n\\t\\tnewContract.locator = payable(msg.sender); // Assuming msg.sender is the locator\\n\\t\\tnewContract.insuranceAmount = _insuranceAmount;\\n\\t\\tnewContract.rentAmount = _rentAmount;\\n\\t\\tnewContract.definedTime = _definedTime;\\n\\t\\tnewContract.timeRemaining = _definedTime;\\n\\t\\tnewContract.state = ContractState.StandBy;\\n\\t}\\n\\n\\tfunction payRent() public payable noReentrancy {\\n\\t\\trequire(\\n\\t\\t\\trentContracts[msg.sender].state == ContractState.Active,\\n\\t\\t\\t\\\"The contract is not active\\\"\\n\\t\\t);\\n\\t\\trentContracts[msg.sender].locator.transfer(msg.value);\\n\\n\\t\\trentContracts[msg.sender].timeRemaining--;\\n\\n\\t\\tif (rentContracts[msg.sender].timeRemaining == 0) {\\n\\t\\t\\trentContracts[msg.sender].state = ContractState.Completed;\\n\\t\\t\\treceiveInsurance(msg.sender);\\n\\t\\t\\temit ContractCompleted();\\n\\t\\t}\\n\\t\\temit RentPaid(msg.sender, msg.value);\\n\\t}\\n\\n\\tfunction abortContract() public payable noReentrancy {\\n\\t\\trequire(\\n\\t\\t\\trentContracts[msg.sender].state == ContractState.Active,\\n\\t\\t\\t\\\"The contract is not active\\\"\\n\\t\\t);\\n\\t\\trequire(\\n\\t\\t\\trentContracts[msg.sender].renter == msg.sender ||\\n\\t\\t\\t\\trentContracts[msg.sender].locator == msg.sender,\\n\\t\\t\\t\\\"Only the renter or locator can abort the contract\\\"\\n\\t\\t);\\n\\n\\t\\tuint time_percentage = (rentContracts[msg.sender].definedTime * 30) /\\n\\t\\t\\t100;\\n\\t\\tif (\\n\\t\\t\\tmsg.sender == rentContracts[msg.sender].renter &&\\n\\t\\t\\ttime_percentage >\\n\\t\\t\\t(rentContracts[msg.sender].definedTime -\\n\\t\\t\\t\\trentContracts[msg.sender].timeRemaining)\\n\\t\\t) {\\n\\t\\t\\trentContracts[msg.sender].timeRemaining = 1;\\n\\t\\t} else {\\n\\t\\t\\trentContracts[msg.sender].state = ContractState.Aborted;\\n\\t\\t\\temit ContractAborted(msg.sender);\\n\\t\\t}\\n\\n\\t\\treceiveInsurance(msg.sender);\\n\\t}\\n\\n\\tfunction payInsurance() public payable noReentrancy {\\n\\t\\trequire(\\n\\t\\t\\trentContracts[msg.sender].state == ContractState.StandBy,\\n\\t\\t\\t\\\"Contract is not in stand by\\\"\\n\\t\\t);\\n\\t\\trequire(\\n\\t\\t\\tmsg.sender == rentContracts[msg.sender].renter,\\n\\t\\t\\t\\\"Only the renter can do this operation\\\"\\n\\t\\t);\\n\\t\\trequire(\\n\\t\\t\\tmsg.value >= rentContracts[msg.sender].insuranceAmount,\\n\\t\\t\\t\\\"Insurance must be higher\\\"\\n\\t\\t);\\n\\n\\t\\trentContracts[msg.sender].state = ContractState.Active;\\n\\t\\temit InsurancePaid(msg.sender, msg.value, address(this));\\n\\t}\\n\\n\\tfunction receiveInsurance(address _renter) internal {\\n\\t\\t(bool success, ) = rentContracts[_renter].renter.call{\\n\\t\\t\\tvalue: rentContracts[_renter].insuranceAmount*10**18\\n\\t\\t}(\\\"\\\");\\n\\t\\trequire(success, \\\"transfer failed\\\");\\n\\t}\\n\\n\\tfunction getState(address _renter) internal view returns (string memory) {\\n\\t\\tif (rentContracts[_renter].state == ContractState.StandBy) {\\n\\t\\t\\treturn \\\"Stand By\\\";\\n\\t\\t} else if (rentContracts[_renter].state == ContractState.Aborted) {\\n\\t\\t\\treturn \\\"Aborted\\\";\\n\\t\\t} else if (rentContracts[_renter].state == ContractState.Completed) {\\n\\t\\t\\treturn \\\"Completed\\\";\\n\\t\\t} else if (rentContracts[_renter].state == ContractState.Active) {\\n\\t\\t\\treturn \\\"Active\\\";\\n\\t\\t} else {\\n\\t\\t\\treturn \\\"The renter don t have a contract\\\";\\n\\t\\t}\\n\\t}\\n\\n\\tfunction getContracts(address _user) public view returns (string memory) {\\n\\t\\tif (rentContracts[msg.sender].renter == _user) {\\n\\t\\t\\tstring memory ContractsData = string(\\n\\t\\t\\t\\tabi.encodePacked(\\n\\t\\t\\t\\t\\t\\\"Locator address: \\\",\\n\\t\\t\\t\\t\\taddressToString(rentContracts[msg.sender].locator),\\n\\t\\t\\t\\t\\t\\\"\\\\n\\\",\\n\\t\\t\\t\\t\\t\\\"Insurance amount: \\\",\\n\\t\\t\\t\\t\\tuintToString(rentContracts[msg.sender].insuranceAmount),\\n\\t\\t\\t\\t\\t\\\"\\\\n\\\",\\n\\t\\t\\t\\t\\t\\\"Rent amount: \\\",\\n\\t\\t\\t\\t\\tuintToString(rentContracts[msg.sender].rentAmount),\\n\\t\\t\\t\\t\\t\\\"\\\\n\\\",\\n\\t\\t\\t\\t\\t\\\"Contract State: \\\",\\n\\t\\t\\t\\t\\tgetState(msg.sender),\\n\\t\\t\\t\\t\\t\\\"\\\\n\\\",\\n\\t\\t\\t\\t\\t\\\"Defined Time: \\\",\\n\\t\\t\\t\\t\\tuintToString(rentContracts[msg.sender].definedTime),\\n\\t\\t\\t\\t\\t\\\"\\\\n\\\",\\n\\t\\t\\t\\t\\t\\\"Time remaining: \\\",\\n\\t\\t\\t\\t\\tuintToString(rentContracts[msg.sender].timeRemaining)\\n\\t\\t\\t\\t)\\n\\t\\t\\t);\\n\\t\\t\\treturn ContractsData;\\n\\t\\t} else {\\n\\t\\t\\treturn \\\"This address doesn't have a contract\\\";\\n\\t\\t}\\n\\t}\\n\\n\\tfunction getContractState(\\n\\t\\taddress _user\\n\\t) public view returns (ContractState) {\\n\\t\\treturn rentContracts[_user].state;\\n\\t}\\n\\n\\tfunction getInsuranceAmount(address _renter) public view returns (uint) {\\n\\t\\treturn rentContracts[_renter].insuranceAmount;\\n\\t}\\n\\n\\tfunction getBalance() public view returns(uint){\\n\\t\\treturn address(this).balance;\\n\\t}\\n\\n\\tfunction uintToString(uint v) internal pure returns (string memory) {\\n\\t\\tif (v == 0) {\\n\\t\\t\\treturn \\\"0\\\";\\n\\t\\t}\\n\\n\\t\\tuint maxlength = 100;\\n\\t\\tbytes memory reversed = new bytes(maxlength);\\n\\t\\tuint i = 0;\\n\\t\\twhile (v != 0) {\\n\\t\\t\\tuint remainder = v % 10;\\n\\t\\t\\tv = v / 10;\\n\\t\\t\\treversed[i++] = bytes1(uint8(48 + remainder));\\n\\t\\t}\\n\\n\\t\\tbytes memory s = new bytes(i);\\n\\t\\tfor (uint j = 0; j < i; j++) {\\n\\t\\t\\ts[j] = reversed[i - j - 1];\\n\\t\\t}\\n\\n\\t\\treturn string(s);\\n\\t}\\n\\n\\tfunction addressToString(\\n\\t\\taddress _addr\\n\\t) internal pure returns (string memory) {\\n\\t\\tbytes32 _bytes = bytes32(uint256(uint160(_addr)));\\n\\t\\tbytes memory HEX = \\\"0123456789abcdef\\\";\\n\\t\\tbytes memory _string = new bytes(42);\\n\\t\\t_string[0] = \\\"0\\\";\\n\\t\\t_string[1] = \\\"x\\\";\\n\\t\\tfor (uint i = 0; i < 20; i++) {\\n\\t\\t\\t_string[2 + i * 2] = HEX[uint8(_bytes[i + 12] >> 4)];\\n\\t\\t\\t_string[3 + i * 2] = HEX[uint8(_bytes[i + 12] & 0x0f)];\\n\\t\\t}\\n\\t\\treturn string(_string);\\n\\t}\\n}\\n\",\"keccak256\":\"0x0a443ea4258c5bba4185673c464b1cfb7bcdc8012c0e604548cca307a8b5194c\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061138f806100206000396000f3fe6080604052600436106100915760003560e01c8063aad7e36311610059578063aad7e363146100ff578063c1785a5c14610148578063c19d93fb146101c3578063c7416b1d146101dd578063c90ed5091461026757600080fd5b806312065fe014610096578063213fe2b7146100b857806368a74d54146100e557806384f12bfe146100ef578063a709c4fe146100f7575b600080fd5b3480156100a257600080fd5b50475b6040519081526020015b60405180910390f35b3480156100c457600080fd5b506100d86100d3366004610f79565b6102a0565b6040516100af9190610fc1565b6100ed6103ae565b005b6100ed610594565b6100ed6107d1565b34801561010b57600080fd5b5061013b61011a366004610f79565b6001600160a01b031660009081526001602052604090206006015460ff1690565b6040516100af919061102c565b34801561015457600080fd5b506101b0610163366004610f79565b600160208190526000918252604090912080549181015460028201546003830154600484015460058501546006909501546001600160a01b03968716969094169492939192909160ff1687565b6040516100af9796959493929190611040565b3480156101cf57600080fd5b5060025461013b9060ff1681565b3480156101e957600080fd5b506100ed6101f836600461108d565b6001600160a01b038416600081815260016020819052604090912080546001600160a01b03199081169093178155808201805490931633179092556002820185905560038201849055600482018390556005820183905560068201805460ff1916828002179055505050505050565b34801561027357600080fd5b506100a5610282366004610f79565b6001600160a01b031660009081526001602052604090206002015490565b336000908152600160205260409020546060906001600160a01b0380841691160361038f57336000908152600160208190526040822001546102ea906001600160a01b0316610991565b3360009081526001602052604090206002015461030690610b7c565b3360009081526001602052604090206003015461032290610b7c565b61032b33610cfd565b3360009081526001602052604090206004015461034790610b7c565b3360009081526001602052604090206005015461036390610b7c565b604051602001610378969594939291906110e4565b60408051601f198184030181529190529392505050565b6040518060600160405280602481526020016113366024913992915050565b60005460ff16156103da5760405162461bcd60e51b81526004016103d190611221565b60405180910390fd5b6000805460ff191660019081179091553360009081526001602052604090206006015460ff16600481111561041157610411610ff4565b1461045e5760405162461bcd60e51b815260206004820152601b60248201527f436f6e7472616374206973206e6f7420696e207374616e64206279000000000060448201526064016103d1565b336000818152600160205260409020546001600160a01b0316146104d25760405162461bcd60e51b815260206004820152602560248201527f4f6e6c79207468652072656e7465722063616e20646f2074686973206f70657260448201526430ba34b7b760d91b60648201526084016103d1565b336000908152600160205260409020600201543410156105345760405162461bcd60e51b815260206004820152601860248201527f496e737572616e6365206d75737420626520686967686572000000000000000060448201526064016103d1565b33600081815260016020908152604091829020600601805460ff1916600217905590513481523092917f2322c34e612b81c21c54a024a8562c49eeb6c514869cc29579f87853d43e7886910160405180910390a36000805460ff19169055565b60005460ff16156105b75760405162461bcd60e51b81526004016103d190611221565b6000805460ff1916600117905560023360009081526001602052604090206006015460ff1660048111156105ed576105ed610ff4565b1461063a5760405162461bcd60e51b815260206004820152601a60248201527f54686520636f6e7472616374206973206e6f742061637469766500000000000060448201526064016103d1565b336000818152600160205260409020546001600160a01b03161480610679575033600081815260016020819052604090912001546001600160a01b0316145b6106df5760405162461bcd60e51b815260206004820152603160248201527f4f6e6c79207468652072656e746572206f72206c6f6361746f722063616e2061604482015270189bdc9d081d1a194818dbdb9d1c9858dd607a1b60648201526084016103d1565b3360009081526001602052604081206004015460649061070090601e61125e565b61070a919061128b565b336000818152600160205260409020549192506001600160a01b0390911614801561075757503360009081526001602052604090206005810154600490910154610754919061129f565b81115b1561077757336000908152600160208190526040909120600501556107bb565b33600081815260016020526040808220600601805460ff19166003179055517f9110ae7f65f56635a4f89eb4041a0727530e94dc3b28c15cb87e0cd4da65cd1d9190a25b6107c433610ea2565b506000805460ff19169055565b60005460ff16156107f45760405162461bcd60e51b81526004016103d190611221565b6000805460ff1916600117905560023360009081526001602052604090206006015460ff16600481111561082a5761082a610ff4565b146108775760405162461bcd60e51b815260206004820152601a60248201527f54686520636f6e7472616374206973206e6f742061637469766500000000000060448201526064016103d1565b3360009081526001602081905260408083209091015490516001600160a01b0391909116913480156108fc02929091818181858888f193505050501580156108c3573d6000803e3d6000fd5b503360009081526001602052604081206005018054916108e2836112b2565b909155505033600090815260016020526040812060050154900361095057336000818152600160205260409020600601805460ff1916600417905561092690610ea2565b6040517f21af1b35312e092d631654105d02329ce4aa3a7aa58f89d2e61e3fa80874dd8c90600090a15b60405134815233907f03b5033869479e8a98af42b272f05933f60489fe9fb43d63e11a6c31f3fa74749060200160405180910390a26000805460ff19169055565b604080518082018252601081526f181899199a1a9b1b9c1cb0b131b232b360811b60208201528151602a80825260608281019094526001600160a01b0385169291600091602082018180368337019050509050600360fc1b816000815181106109fc576109fc6112df565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110610a2b57610a2b6112df565b60200101906001600160f81b031916908160001a90535060005b6014811015610b735782600485610a5d84600c6112f5565b60208110610a6d57610a6d6112df565b1a60f81b6001600160f81b031916901c60f81c60ff1681518110610a9357610a936112df565b01602001516001600160f81b03191682610aae83600261125e565b610ab99060026112f5565b81518110610ac957610ac96112df565b60200101906001600160f81b031916908160001a9053508284610aed83600c6112f5565b60208110610afd57610afd6112df565b825191901a600f16908110610b1457610b146112df565b01602001516001600160f81b03191682610b2f83600261125e565b610b3a9060036112f5565b81518110610b4a57610b4a6112df565b60200101906001600160f81b031916908160001a90535080610b6b81611308565b915050610a45565b50949350505050565b606081600003610ba35750506040805180820190915260018152600360fc1b602082015290565b60408051606480825260a082019092526000908260208201818036833701905050905060005b8415610c33576000610bdc600a87611321565b9050610be9600a8761128b565b9550610bf68160306112f5565b60f81b8383610c0481611308565b945081518110610c1657610c166112df565b60200101906001600160f81b031916908160001a90535050610bc9565b60008167ffffffffffffffff811115610c4e57610c4e6112c9565b6040519080825280601f01601f191660200182016040528015610c78576020820181803683370190505b50905060005b82811015610cf357836001610c93838661129f565b610c9d919061129f565b81518110610cad57610cad6112df565b602001015160f81c60f81b828281518110610cca57610cca6112df565b60200101906001600160f81b031916908160001a90535080610ceb81611308565b915050610c7e565b5095945050505050565b606060016001600160a01b03831660009081526001602052604090206006015460ff166004811115610d3157610d31610ff4565b03610d5a5750506040805180820190915260088152675374616e6420427960c01b602082015290565b60036001600160a01b03831660009081526001602052604090206006015460ff166004811115610d8c57610d8c610ff4565b03610db457505060408051808201909152600781526610589bdc9d195960ca1b602082015290565b60046001600160a01b03831660009081526001602052604090206006015460ff166004811115610de657610de6610ff4565b03610e1057505060408051808201909152600981526810dbdb5c1b195d195960ba1b602082015290565b60026001600160a01b03831660009081526001602052604090206006015460ff166004811115610e4257610e42610ff4565b03610e6957505060408051808201909152600681526541637469766560d01b602082015290565b50506040805180820190915260208082527f5468652072656e74657220646f6e20742068617665206120636f6e74726163749082015290565b6001600160a01b038082166000908152600160205260408120805460029091015491921690610ed990670de0b6b3a764000061125e565b604051600081818185875af1925050503d8060008114610f15576040519150601f19603f3d011682016040523d82523d6000602084013e610f1a565b606091505b5050905080610f5d5760405162461bcd60e51b815260206004820152600f60248201526e1d1c985b9cd9995c8819985a5b1959608a1b60448201526064016103d1565b5050565b6001600160a01b0381168114610f7657600080fd5b50565b600060208284031215610f8b57600080fd5b8135610f9681610f61565b9392505050565b60005b83811015610fb8578181015183820152602001610fa0565b50506000910152565b6020815260008251806020840152610fe0816040850160208701610f9d565b601f01601f19169190910160400192915050565b634e487b7160e01b600052602160045260246000fd5b6005811061102857634e487b7160e01b600052602160045260246000fd5b9052565b6020810161103a828461100a565b92915050565b6001600160a01b0388811682528716602082015260408101869052606081018590526080810184905260a0810183905260e0810161108160c083018461100a565b98975050505050505050565b600080600080608085870312156110a357600080fd5b84356110ae81610f61565b966020860135965060408601359560600135945092505050565b600081516110da818560208601610f9d565b9290920192915050565b7002637b1b0ba37b91030b2323932b9b99d1607d1b815260008751611110816011850160208c01610f9d565b600560f91b601191840191820181905271024b739bab930b731b29030b6b7bab73a1d160751b6012830152885161114e816024850160208d01610f9d565b602492019182018190526c02932b73a1030b6b7bab73a1d1609d1b60258301528751611181816032850160208c01610f9d565b603292019182015261121461120e6111f26111c56111ec6111d2826111bf603389016f021b7b73a3930b1ba1029ba30ba329d160851b815260100190565b8d6110c8565b600560f91b815260010190565b6d02232b334b732b2102a34b6b29d160951b8152600e0190565b896110c8565b6f02a34b6b2903932b6b0b4b734b7339d160851b815260100190565b856110c8565b9998505050505050505050565b6020808252600d908201526c4e6f207265656e7472616e637960981b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761103a5761103a611248565b634e487b7160e01b600052601260045260246000fd5b60008261129a5761129a611275565b500490565b8181038181111561103a5761103a611248565b6000816112c1576112c1611248565b506000190190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b8082018082111561103a5761103a611248565b60006001820161131a5761131a611248565b5060010190565b60008261133057611330611275565b50069056fe54686973206164647265737320646f65736e27742068617665206120636f6e7472616374a2646970667358221220bf685d839e2f0d9a079681cb1b798f3f404244731d30fe1cac7e728ba4661a9864736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106100915760003560e01c8063aad7e36311610059578063aad7e363146100ff578063c1785a5c14610148578063c19d93fb146101c3578063c7416b1d146101dd578063c90ed5091461026757600080fd5b806312065fe014610096578063213fe2b7146100b857806368a74d54146100e557806384f12bfe146100ef578063a709c4fe146100f7575b600080fd5b3480156100a257600080fd5b50475b6040519081526020015b60405180910390f35b3480156100c457600080fd5b506100d86100d3366004610f79565b6102a0565b6040516100af9190610fc1565b6100ed6103ae565b005b6100ed610594565b6100ed6107d1565b34801561010b57600080fd5b5061013b61011a366004610f79565b6001600160a01b031660009081526001602052604090206006015460ff1690565b6040516100af919061102c565b34801561015457600080fd5b506101b0610163366004610f79565b600160208190526000918252604090912080549181015460028201546003830154600484015460058501546006909501546001600160a01b03968716969094169492939192909160ff1687565b6040516100af9796959493929190611040565b3480156101cf57600080fd5b5060025461013b9060ff1681565b3480156101e957600080fd5b506100ed6101f836600461108d565b6001600160a01b038416600081815260016020819052604090912080546001600160a01b03199081169093178155808201805490931633179092556002820185905560038201849055600482018390556005820183905560068201805460ff1916828002179055505050505050565b34801561027357600080fd5b506100a5610282366004610f79565b6001600160a01b031660009081526001602052604090206002015490565b336000908152600160205260409020546060906001600160a01b0380841691160361038f57336000908152600160208190526040822001546102ea906001600160a01b0316610991565b3360009081526001602052604090206002015461030690610b7c565b3360009081526001602052604090206003015461032290610b7c565b61032b33610cfd565b3360009081526001602052604090206004015461034790610b7c565b3360009081526001602052604090206005015461036390610b7c565b604051602001610378969594939291906110e4565b60408051601f198184030181529190529392505050565b6040518060600160405280602481526020016113366024913992915050565b60005460ff16156103da5760405162461bcd60e51b81526004016103d190611221565b60405180910390fd5b6000805460ff191660019081179091553360009081526001602052604090206006015460ff16600481111561041157610411610ff4565b1461045e5760405162461bcd60e51b815260206004820152601b60248201527f436f6e7472616374206973206e6f7420696e207374616e64206279000000000060448201526064016103d1565b336000818152600160205260409020546001600160a01b0316146104d25760405162461bcd60e51b815260206004820152602560248201527f4f6e6c79207468652072656e7465722063616e20646f2074686973206f70657260448201526430ba34b7b760d91b60648201526084016103d1565b336000908152600160205260409020600201543410156105345760405162461bcd60e51b815260206004820152601860248201527f496e737572616e6365206d75737420626520686967686572000000000000000060448201526064016103d1565b33600081815260016020908152604091829020600601805460ff1916600217905590513481523092917f2322c34e612b81c21c54a024a8562c49eeb6c514869cc29579f87853d43e7886910160405180910390a36000805460ff19169055565b60005460ff16156105b75760405162461bcd60e51b81526004016103d190611221565b6000805460ff1916600117905560023360009081526001602052604090206006015460ff1660048111156105ed576105ed610ff4565b1461063a5760405162461bcd60e51b815260206004820152601a60248201527f54686520636f6e7472616374206973206e6f742061637469766500000000000060448201526064016103d1565b336000818152600160205260409020546001600160a01b03161480610679575033600081815260016020819052604090912001546001600160a01b0316145b6106df5760405162461bcd60e51b815260206004820152603160248201527f4f6e6c79207468652072656e746572206f72206c6f6361746f722063616e2061604482015270189bdc9d081d1a194818dbdb9d1c9858dd607a1b60648201526084016103d1565b3360009081526001602052604081206004015460649061070090601e61125e565b61070a919061128b565b336000818152600160205260409020549192506001600160a01b0390911614801561075757503360009081526001602052604090206005810154600490910154610754919061129f565b81115b1561077757336000908152600160208190526040909120600501556107bb565b33600081815260016020526040808220600601805460ff19166003179055517f9110ae7f65f56635a4f89eb4041a0727530e94dc3b28c15cb87e0cd4da65cd1d9190a25b6107c433610ea2565b506000805460ff19169055565b60005460ff16156107f45760405162461bcd60e51b81526004016103d190611221565b6000805460ff1916600117905560023360009081526001602052604090206006015460ff16600481111561082a5761082a610ff4565b146108775760405162461bcd60e51b815260206004820152601a60248201527f54686520636f6e7472616374206973206e6f742061637469766500000000000060448201526064016103d1565b3360009081526001602081905260408083209091015490516001600160a01b0391909116913480156108fc02929091818181858888f193505050501580156108c3573d6000803e3d6000fd5b503360009081526001602052604081206005018054916108e2836112b2565b909155505033600090815260016020526040812060050154900361095057336000818152600160205260409020600601805460ff1916600417905561092690610ea2565b6040517f21af1b35312e092d631654105d02329ce4aa3a7aa58f89d2e61e3fa80874dd8c90600090a15b60405134815233907f03b5033869479e8a98af42b272f05933f60489fe9fb43d63e11a6c31f3fa74749060200160405180910390a26000805460ff19169055565b604080518082018252601081526f181899199a1a9b1b9c1cb0b131b232b360811b60208201528151602a80825260608281019094526001600160a01b0385169291600091602082018180368337019050509050600360fc1b816000815181106109fc576109fc6112df565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110610a2b57610a2b6112df565b60200101906001600160f81b031916908160001a90535060005b6014811015610b735782600485610a5d84600c6112f5565b60208110610a6d57610a6d6112df565b1a60f81b6001600160f81b031916901c60f81c60ff1681518110610a9357610a936112df565b01602001516001600160f81b03191682610aae83600261125e565b610ab99060026112f5565b81518110610ac957610ac96112df565b60200101906001600160f81b031916908160001a9053508284610aed83600c6112f5565b60208110610afd57610afd6112df565b825191901a600f16908110610b1457610b146112df565b01602001516001600160f81b03191682610b2f83600261125e565b610b3a9060036112f5565b81518110610b4a57610b4a6112df565b60200101906001600160f81b031916908160001a90535080610b6b81611308565b915050610a45565b50949350505050565b606081600003610ba35750506040805180820190915260018152600360fc1b602082015290565b60408051606480825260a082019092526000908260208201818036833701905050905060005b8415610c33576000610bdc600a87611321565b9050610be9600a8761128b565b9550610bf68160306112f5565b60f81b8383610c0481611308565b945081518110610c1657610c166112df565b60200101906001600160f81b031916908160001a90535050610bc9565b60008167ffffffffffffffff811115610c4e57610c4e6112c9565b6040519080825280601f01601f191660200182016040528015610c78576020820181803683370190505b50905060005b82811015610cf357836001610c93838661129f565b610c9d919061129f565b81518110610cad57610cad6112df565b602001015160f81c60f81b828281518110610cca57610cca6112df565b60200101906001600160f81b031916908160001a90535080610ceb81611308565b915050610c7e565b5095945050505050565b606060016001600160a01b03831660009081526001602052604090206006015460ff166004811115610d3157610d31610ff4565b03610d5a5750506040805180820190915260088152675374616e6420427960c01b602082015290565b60036001600160a01b03831660009081526001602052604090206006015460ff166004811115610d8c57610d8c610ff4565b03610db457505060408051808201909152600781526610589bdc9d195960ca1b602082015290565b60046001600160a01b03831660009081526001602052604090206006015460ff166004811115610de657610de6610ff4565b03610e1057505060408051808201909152600981526810dbdb5c1b195d195960ba1b602082015290565b60026001600160a01b03831660009081526001602052604090206006015460ff166004811115610e4257610e42610ff4565b03610e6957505060408051808201909152600681526541637469766560d01b602082015290565b50506040805180820190915260208082527f5468652072656e74657220646f6e20742068617665206120636f6e74726163749082015290565b6001600160a01b038082166000908152600160205260408120805460029091015491921690610ed990670de0b6b3a764000061125e565b604051600081818185875af1925050503d8060008114610f15576040519150601f19603f3d011682016040523d82523d6000602084013e610f1a565b606091505b5050905080610f5d5760405162461bcd60e51b815260206004820152600f60248201526e1d1c985b9cd9995c8819985a5b1959608a1b60448201526064016103d1565b5050565b6001600160a01b0381168114610f7657600080fd5b50565b600060208284031215610f8b57600080fd5b8135610f9681610f61565b9392505050565b60005b83811015610fb8578181015183820152602001610fa0565b50506000910152565b6020815260008251806020840152610fe0816040850160208701610f9d565b601f01601f19169190910160400192915050565b634e487b7160e01b600052602160045260246000fd5b6005811061102857634e487b7160e01b600052602160045260246000fd5b9052565b6020810161103a828461100a565b92915050565b6001600160a01b0388811682528716602082015260408101869052606081018590526080810184905260a0810183905260e0810161108160c083018461100a565b98975050505050505050565b600080600080608085870312156110a357600080fd5b84356110ae81610f61565b966020860135965060408601359560600135945092505050565b600081516110da818560208601610f9d565b9290920192915050565b7002637b1b0ba37b91030b2323932b9b99d1607d1b815260008751611110816011850160208c01610f9d565b600560f91b601191840191820181905271024b739bab930b731b29030b6b7bab73a1d160751b6012830152885161114e816024850160208d01610f9d565b602492019182018190526c02932b73a1030b6b7bab73a1d1609d1b60258301528751611181816032850160208c01610f9d565b603292019182015261121461120e6111f26111c56111ec6111d2826111bf603389016f021b7b73a3930b1ba1029ba30ba329d160851b815260100190565b8d6110c8565b600560f91b815260010190565b6d02232b334b732b2102a34b6b29d160951b8152600e0190565b896110c8565b6f02a34b6b2903932b6b0b4b734b7339d160851b815260100190565b856110c8565b9998505050505050505050565b6020808252600d908201526c4e6f207265656e7472616e637960981b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761103a5761103a611248565b634e487b7160e01b600052601260045260246000fd5b60008261129a5761129a611275565b500490565b8181038181111561103a5761103a611248565b6000816112c1576112c1611248565b506000190190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b8082018082111561103a5761103a611248565b60006001820161131a5761131a611248565b5060010190565b60008261133057611330611275565b50069056fe54686973206164647265737320646f65736e27742068617665206120636f6e7472616374a2646970667358221220bf685d839e2f0d9a079681cb1b798f3f404244731d30fe1cac7e728ba4661a9864736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3,
        "contract": "contracts/Rent.sol:Rent",
        "label": "locked",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 24,
        "contract": "contracts/Rent.sol:Rent",
        "label": "rentContracts",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_struct(Contract)19_storage)"
      },
      {
        "astId": 33,
        "contract": "contracts/Rent.sol:Rent",
        "label": "state",
        "offset": 0,
        "slot": "2",
        "type": "t_enum(ContractState)30"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_enum(ContractState)30": {
        "encoding": "inplace",
        "label": "enum Rent.ContractState",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_struct(Contract)19_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Rent.Contract)",
        "numberOfBytes": "32",
        "value": "t_struct(Contract)19_storage"
      },
      "t_struct(Contract)19_storage": {
        "encoding": "inplace",
        "label": "struct Rent.Contract",
        "members": [
          {
            "astId": 5,
            "contract": "contracts/Rent.sol:Rent",
            "label": "renter",
            "offset": 0,
            "slot": "0",
            "type": "t_address_payable"
          },
          {
            "astId": 7,
            "contract": "contracts/Rent.sol:Rent",
            "label": "locator",
            "offset": 0,
            "slot": "1",
            "type": "t_address_payable"
          },
          {
            "astId": 9,
            "contract": "contracts/Rent.sol:Rent",
            "label": "insuranceAmount",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 11,
            "contract": "contracts/Rent.sol:Rent",
            "label": "rentAmount",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 13,
            "contract": "contracts/Rent.sol:Rent",
            "label": "definedTime",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 15,
            "contract": "contracts/Rent.sol:Rent",
            "label": "timeRemaining",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 18,
            "contract": "contracts/Rent.sol:Rent",
            "label": "state",
            "offset": 0,
            "slot": "6",
            "type": "t_enum(ContractState)30"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}